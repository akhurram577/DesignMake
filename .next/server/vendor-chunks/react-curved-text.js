"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-curved-text";
exports.ids = ["vendor-chunks/react-curved-text"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-curved-text/dist/index.es.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-curved-text/dist/index.es.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReactCurvedText: () => (/* binding */ Pt),\n/* harmony export */   \"default\": () => (/* binding */ Pt)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/../../../AppData/Roaming/npm/node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\nfunction i(){return i=Object.assign?Object.assign.bind():function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(t[n]=r[n])}return t},i.apply(this,arguments)}const a={origin:[0,0,0],round:4},o={a:7,c:6,h:1,l:2,m:2,r:4,q:4,s:4,t:2,v:1,z:0};function m(t){let e=t.pathValue[t.segmentStart],r=e.toLowerCase();const{data:n}=t;for(;n.length>=o[r]&&(\"m\"===r&&n.length>2?(t.segments.push([e,...n.splice(0,2)]),r=\"l\",e=\"m\"===e?\"l\":\"L\"):t.segments.push([e,...n.splice(0,o[r])]),o[r]););}const c=\"SVGPathCommander error\";function u(t){const{index:e,pathValue:r}=t,n=r.charCodeAt(e);return 48===n?(t.param=0,void(t.index+=1)):49===n?(t.param=1,void(t.index+=1)):void(t.err=`${c}: invalid Arc flag \"${r[e]}\", expecting 0 or 1 at index ${e}`)}function l(t){return t>=48&&t<=57}const h=\"Invalid path value\";function f(t){const{max:e,pathValue:r,index:n}=t;let s,i=n,a=!1,o=!1,m=!1,u=!1;if(i>=e)t.err=`${c}: ${h} at index ${i}, \"pathValue\" is missing param`;else if(s=r.charCodeAt(i),43!==s&&45!==s||(i+=1,s=r.charCodeAt(i)),l(s)||46===s){if(46!==s){if(a=48===s,i+=1,s=r.charCodeAt(i),a&&i<e&&s&&l(s))return void(t.err=`${c}: ${h} at index ${n}, \"${r[n]}\" illegal number`);for(;i<e&&l(r.charCodeAt(i));)i+=1,o=!0;s=r.charCodeAt(i)}if(46===s){for(u=!0,i+=1;l(r.charCodeAt(i));)i+=1,m=!0;s=r.charCodeAt(i)}if(101===s||69===s){if(u&&!o&&!m)return void(t.err=`${c}: ${h} at index ${i}, \"${r[i]}\" invalid float exponent`);if(i+=1,s=r.charCodeAt(i),43!==s&&45!==s||(i+=1),!(i<e&&l(r.charCodeAt(i))))return void(t.err=`${c}: ${h} at index ${i}, \"${r[i]}\" invalid integer exponent`);for(;i<e&&l(r.charCodeAt(i));)i+=1}t.index=i,t.param=+t.pathValue.slice(n,i)}else t.err=`${c}: ${h} at index ${i}, \"${r[i]}\" is not a number`}function y(t){const{pathValue:e,max:r}=t;for(;t.index<r&&(10===(n=e.charCodeAt(t.index))||13===n||8232===n||8233===n||32===n||9===n||11===n||12===n||160===n||n>=5760&&[5760,6158,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8239,8287,12288,65279].includes(n));)t.index+=1;var n}function x(t){return t>=48&&t<=57||43===t||45===t||46===t}function p(t){const{max:e,pathValue:r,index:n}=t,s=r.charCodeAt(n),i=o[r[n].toLowerCase()];if(t.segmentStart=n,function(t){switch(32|t){case 109:case 122:case 108:case 104:case 118:case 99:case 115:case 113:case 116:case 97:return!0;default:return!1}}(s))if(t.index+=1,y(t),t.data=[],i){for(;;){for(let n=i;n>0;n-=1){if(97!=(32|s)||3!==n&&4!==n?f(t):u(t),t.err.length)return;t.data.push(t.param),y(t),t.index<e&&44===r.charCodeAt(t.index)&&(t.index+=1,y(t))}if(t.index>=t.max)break;if(!x(r.charCodeAt(t.index)))break}m(t)}else m(t);else t.err=`${c}: ${h} \"${r[n]}\" is not a path command`}function g(t){return t.map((t=>Array.isArray(t)?[...t]:t))}function d(t){this.segments=[],this.pathValue=t,this.max=t.length,this.index=0,this.param=0,this.segmentStart=0,this.data=[],this.err=\"\"}function b(t){return Array.isArray(t)&&t.every((t=>{const e=t[0].toLowerCase();return o[e]===t.length-1&&\"achlmqstvz\".includes(e)}))}function M(t){if(b(t))return g(t);const e=new d(t);for(y(e);e.index<e.max&&!e.err.length;)p(e);return e.err?e.err:e.segments}function w(t){return b(t)&&t.every((([t])=>t===t.toUpperCase()))}function v(t){if(w(t))return g(t);const e=M(t);let r=0,n=0,s=0,i=0;return e.map((t=>{const e=t.slice(1).map(Number),[a]=t,o=a.toUpperCase();if(\"M\"===a)return[r,n]=e,s=r,i=n,[\"M\",r,n];let m=[];if(a!==o)switch(o){case\"A\":m=[o,e[0],e[1],e[2],e[3],e[4],e[5]+r,e[6]+n];break;case\"V\":m=[o,e[0]+n];break;case\"H\":m=[o,e[0]+r];break;default:m=[o,...e.map(((t,e)=>t+(e%2?n:r)))]}else m=[o,...e];const c=m.length;switch(o){case\"Z\":r=s,n=i;break;case\"H\":[,r]=m;break;case\"V\":[,n]=m;break;default:r=m[c-2],n=m[c-1],\"M\"===o&&(s=r,i=n)}return m}))}function A(t){return b(t)&&t.slice(1).every((([t])=>t===t.toLowerCase()))}function N(t){if(A(t))return g(t);const e=M(t);let r=0,n=0,s=0,i=0;return e.map((t=>{const e=t.slice(1).map(Number),[a]=t,o=a.toLowerCase();if(\"M\"===a)return[r,n]=e,s=r,i=n,[\"M\",r,n];let m=[];if(a!==o)switch(o){case\"a\":m=[o,e[0],e[1],e[2],e[3],e[4],e[5]-r,e[6]-n];break;case\"v\":m=[o,e[0]-n];break;case\"h\":m=[o,e[0]-r];break;default:m=[o,...e.map(((t,e)=>t-(e%2?n:r)))]}else\"m\"===a&&(s=e[0]+r,i=e[1]+n),m=[o,...e];const c=m.length;switch(o){case\"z\":r=s,n=i;break;case\"h\":r+=m[1];break;case\"v\":n+=m[1];break;default:r+=m[c-2],n+=m[c-1]}return m}))}function C(t,e,r){if(t[r].length>7){t[r].shift();const n=t[r];let s=r;for(;n.length;)e[r]=\"A\",t.splice(s+=1,0,[\"C\",...n.splice(0,6)]);t.splice(r,1)}}function P(t){return w(t)&&t.every((([t])=>\"ACLMQZ\".includes(t)))}function S(t){return P(t)&&t.every((([t])=>\"MC\".includes(t)))}function k(t,e){const[r]=t,{x1:n,y1:s,x2:i,y2:a}=e,o=t.slice(1).map(Number);let m=t;if(\"TQ\".includes(r)||(e.qx=null,e.qy=null),\"H\"===r)m=[\"L\",t[1],s];else if(\"V\"===r)m=[\"L\",n,t[1]];else if(\"S\"===r){const t=2*n-i,r=2*s-a;e.x1=t,e.y1=r,m=[\"C\",t,r,...o]}else if(\"T\"===r){const t=2*n-e.qx,r=2*s-e.qy;e.qx=t,e.qy=r,m=[\"Q\",t,r,...o]}else if(\"Q\"===r){const[t,r]=o;e.qx=t,e.qy=r}return m}const T={x1:0,y1:0,x2:0,y2:0,x:0,y:0,qx:null,qy:null};function $(t){if(P(t))return g(t);const e=v(t),r={...T},n=e.length;for(let t=0;t<n;t+=1){e[t],e[t]=k(e[t],r);const n=e[t],s=n.length;r.x1=+n[s-2],r.y1=+n[s-1],r.x2=+n[s-4]||r.x1,r.y2=+n[s-3]||r.y1}return e}function E(t,e,r){return{x:t*Math.cos(r)-e*Math.sin(r),y:t*Math.sin(r)+e*Math.cos(r)}}function q(t,e,r,n,s,i,a,o,m,c){let u=t,l=e,h=r,f=n,y=o,x=m;const p=120*Math.PI/180,g=Math.PI/180*(+s||0);let d,b,M,w,v,A=[];if(c)[b,M,w,v]=c;else{d=E(u,l,-g),u=d.x,l=d.y,d=E(y,x,-g),y=d.x,x=d.y;const t=(u-y)/2,e=(l-x)/2;let r=t*t/(h*h)+e*e/(f*f);r>1&&(r=Math.sqrt(r),h*=r,f*=r);const n=h*h,s=f*f,o=(i===a?-1:1)*Math.sqrt(Math.abs((n*s-n*e*e-s*t*t)/(n*e*e+s*t*t)));w=o*h*e/f+(u+y)/2,v=o*-f*t/h+(l+x)/2,b=Math.asin(((l-v)/f*10**9>>0)/10**9),M=Math.asin(((x-v)/f*10**9>>0)/10**9),b=u<w?Math.PI-b:b,M=y<w?Math.PI-M:M,b<0&&(b=2*Math.PI+b),M<0&&(M=2*Math.PI+M),a&&b>M&&(b-=2*Math.PI),!a&&M>b&&(M-=2*Math.PI)}let N=M-b;if(Math.abs(N)>p){const t=M,e=y,r=x;M=b+p*(a&&M>b?1:-1),y=w+h*Math.cos(M),x=v+f*Math.sin(M),A=q(y,x,h,f,s,0,a,e,r,[M,t,w,v])}N=M-b;const C=Math.cos(b),P=Math.sin(b),S=Math.cos(M),k=Math.sin(M),T=Math.tan(N/4),$=4/3*h*T,O=4/3*f*T,V=[u,l],j=[u+$*P,l-O*C],L=[y+$*k,x-O*S],I=[y,x];if(j[0]=2*V[0]-j[0],j[1]=2*V[1]-j[1],c)return[...j,...L,...I,...A];A=[...j,...L,...I,...A];const z=[];for(let t=0,e=A.length;t<e;t+=1)z[t]=t%2?E(A[t-1],A[t],g).y:E(A[t],A[t+1],g).x;return z}function O(t,e,r,n,s,i){const a=1/3,o=2/3;return[a*t+o*r,a*e+o*n,a*s+o*r,a*i+o*n,s,i]}function V(t,e,r){const[n,s]=t,[i,a]=e;return[n+(i-n)*r,s+(a-s)*r]}function j(t,e){return Math.sqrt((t[0]-e[0])*(t[0]-e[0])+(t[1]-e[1])*(t[1]-e[1]))}function L(t,e,r,n,s){const i=j([t,e],[r,n]);let a={x:0,y:0};if(\"number\"==typeof s)if(s<=0)a={x:t,y:e};else if(s>=i)a={x:r,y:n};else{const[o,m]=V([t,e],[r,n],s/i);a={x:o,y:m}}return{length:i,point:a,min:{x:Math.min(t,r),y:Math.min(e,n)},max:{x:Math.max(t,r),y:Math.max(e,n)}}}function I(t,e,r,n){const s=.5,i=[t,e],a=[r,n],o=V(i,a,s),m=V(a,o,s),c=V(o,m,s),u=V(m,c,s),l=V(c,u,s),h=L(...[...i,...o,...c,...l,s]).point,f=L(...[...l,...u,...m,...a,0]).point;return[h.x,h.y,f.x,f.y,r,n]}function z(t,e){const[r]=t,n=t.slice(1).map(Number),[s,i]=n;let a;const{x1:o,y1:m,x:c,y:u}=e;switch(\"TQ\".includes(r)||(e.qx=null,e.qy=null),r){case\"M\":return e.x=s,e.y=i,t;case\"A\":return a=[o,m,...n],[\"C\",...q(...a)];case\"Q\":return e.qx=s,e.qy=i,a=[o,m,...n],[\"C\",...O(...a)];case\"L\":return[\"C\",...I(o,m,s,i)];case\"Z\":return[\"C\",...I(o,m,c,u)]}return t}function Z(t){if(S(t))return g(t);const e=$(t),r={...T},n=[];let s=\"\",i=e.length;for(let t=0;t<i;t+=1){[s]=e[t],n[t]=s,e[t]=z(e[t],r),C(e,n,t),i=e.length;const a=e[t],o=a.length;r.x1=+a[o-2],r.y1=+a[o-1],r.x2=+a[o-4]||r.x1,r.y2=+a[o-3]||r.y1}return e}function Q(t,e){let{round:r}=a;if(\"off\"===e||\"off\"===r)return g(t);r=e>=0?e:r;const n=\"number\"==typeof r&&r>=1?10**r:1;return t.map((t=>{const e=t.slice(1).map(Number).map((t=>r?Math.round(t*n)/n:Math.round(t)));return[t[0],...e]}))}function R(t,e){return Q(t,e).map((t=>t[0]+t.slice(1).join(\" \"))).join(\"\")}function F(t){const e=v(t),r=\"Z\"===e.slice(-1)[0][0],n=$(e).map(((t,r)=>{const[n,s]=t.slice(-2).map(Number);return{seg:e[r],n:t,c:e[r][0],x:n,y:s}})).map(((t,e,n)=>{const s=t.seg,i=t.n,a=e&&n[e-1],o=n[e+1],m=t.c,c=n.length,u=e?n[e-1].x:n[c-1].x,l=e?n[e-1].y:n[c-1].y;let h=[];switch(m){case\"M\":h=r?[\"Z\"]:[m,u,l];break;case\"A\":h=[m,...s.slice(1,-3),1===s[5]?0:1,u,l];break;case\"C\":h=o&&\"S\"===o.c?[\"S\",s[1],s[2],u,l]:[m,s[3],s[4],s[1],s[2],u,l];break;case\"S\":h=!a||!\"CS\".includes(a.c)||o&&\"S\"===o.c?[m,i[1],i[2],u,l]:[\"C\",i[3],i[4],i[1],i[2],u,l];break;case\"Q\":h=o&&\"T\"===o.c?[\"T\",u,l]:[m,...s.slice(1,-2),u,l];break;case\"T\":h=!a||!\"QT\".includes(a.c)||o&&\"T\"===o.c?[m,u,l]:[\"Q\",i[1],i[2],u,l];break;case\"Z\":h=[\"M\",u,l];break;case\"H\":h=[m,u];break;case\"V\":h=[m,l];break;default:h=[m,...s.slice(1,-2),u,l]}return h}));return r?n.reverse():[n[0],...n.slice(1).reverse()]}function H(t){const e=[];let r,n=-1;return t.forEach((t=>{\"M\"===t[0]?(r=[t],n+=1):r=[...r,t],e[n]=r})),e}function D(t,e,r,n){const[s]=t,i=t=>Math.round(1e4*t)/1e4,a=t.slice(1).map((t=>+t)),o=e.slice(1).map((t=>+t)),{x1:m,y1:c,x2:u,y2:l,x:h,y:f}=r;let y=t;const[x,p]=o.slice(-2);if(\"TQ\".includes(s)||(r.qx=null,r.qy=null),[\"V\",\"H\",\"S\",\"T\",\"Z\"].includes(s))y=[s,...a];else if(\"L\"===s)i(h)===i(x)?y=[\"V\",p]:i(f)===i(p)&&(y=[\"H\",x]);else if(\"C\"===s){const[t,e]=o;\"CS\".includes(n)&&(i(t)===i(2*m-u)&&i(e)===i(2*c-l)||i(m)===i(2*u-h)&&i(c)===i(2*l-f))&&(y=[\"S\",...o.slice(-4)]),r.x1=t,r.y1=e}else if(\"Q\"===s){const[t,e]=o;r.qx=t,r.qy=e,\"QT\".includes(n)&&(i(t)===i(2*m-u)&&i(e)===i(2*c-l)||i(m)===i(2*u-h)&&i(c)===i(2*l-f))&&(y=[\"T\",...o.slice(-2)])}return y}function X(t,e){const r=v(t),n=$(r),s={...T},i=[],a=r.length;let o=\"\",m=\"\",c=0,u=0,l=0,h=0;for(let t=0;t<a;t+=1){[o]=r[t],i[t]=o,t&&(m=i[t-1]),r[t]=D(r[t],n[t],s,m);const e=r[t],a=e.length;switch(s.x1=+e[a-2],s.y1=+e[a-1],s.x2=+e[a-4]||s.x1,s.y2=+e[a-3]||s.y1,o){case\"Z\":c=l,u=h;break;case\"H\":[,c]=e;break;case\"V\":[,u]=e;break;default:[c,u]=e.slice(-2).map(Number),\"M\"===o&&(l=c,h=u)}s.x=c,s.y=u}const f=Q(r,e),y=Q(N(r),e);return f.map(((t,e)=>e?t.join(\"\").length<y[e].join(\"\").length?t:y[e]:t))}function Y(t){const e=new st,r=Array.from(t);if(!r.every((t=>!Number.isNaN(t))))throw TypeError(`CSSMatrix: \"${t}\" must only have numbers.`);if(16===r.length){const[t,n,s,i,a,o,m,c,u,l,h,f,y,x,p,g]=r;e.m11=t,e.a=t,e.m21=a,e.c=a,e.m31=u,e.m41=y,e.e=y,e.m12=n,e.b=n,e.m22=o,e.d=o,e.m32=l,e.m42=x,e.f=x,e.m13=s,e.m23=m,e.m33=h,e.m43=p,e.m14=i,e.m24=c,e.m34=f,e.m44=g}else{if(6!==r.length)throw new TypeError(\"CSSMatrix: expecting an Array of 6/16 values.\");{const[t,n,s,i,a,o]=r;e.m11=t,e.a=t,e.m12=n,e.b=n,e.m21=s,e.c=s,e.m22=i,e.d=i,e.m41=a,e.e=a,e.m42=o,e.f=o}}return e}function B(t){const e=Object.keys(new st);if(\"object\"==typeof t&&e.every((e=>e in t)))return Y([t.m11,t.m12,t.m13,t.m14,t.m21,t.m22,t.m23,t.m24,t.m31,t.m32,t.m33,t.m34,t.m41,t.m42,t.m43,t.m44]);throw TypeError(`CSSMatrix: \"${JSON.stringify(t)}\" is not a DOMMatrix / CSSMatrix / JSON compatible object.`)}\n/**\n * Creates a new mutable `CSSMatrix` given any valid CSS transform string,\n * or what we call `TransformList`:\n *\n * * `matrix(a, b, c, d, e, f)` - valid matrix() transform function\n * * `matrix3d(m11, m12, m13, ...m44)` - valid matrix3d() transform function\n * * `translate(tx, ty) rotateX(alpha)` - any valid transform function(s)\n *\n * @copyright thednp © 2021\n *\n * @param {string} source valid CSS transform string syntax.\n * @return {CSSMatrix} the resulted matrix.\n */function J(t){if(\"string\"!=typeof t)throw TypeError(`CSSMatrix: \"${t}\" is not a string.`);const e=String(t).replace(/\\s/g,\"\");let r=new st;const n=`CSSMatrix: invalid transform string \"${t}\"`;return e.split(\")\").filter((t=>t)).forEach((t=>{const[e,s]=t.split(\"(\");if(!s)throw TypeError(n);const i=s.split(\",\").map((t=>t.includes(\"rad\")?parseFloat(t)*(180/Math.PI):parseFloat(t))),[a,o,m,c]=i,u=[a,o,m],l=[a,o,m,c];if(\"perspective\"===e&&a&&[o,m].every((t=>void 0===t)))r.m34=-1/a;else if(e.includes(\"matrix\")&&[6,16].includes(i.length)&&i.every((t=>!Number.isNaN(+t)))){const t=i.map((t=>Math.abs(t)<1e-6?0:t));r=r.multiply(Y(t))}else if(\"translate3d\"===e&&u.every((t=>!Number.isNaN(+t))))r=r.translate(a,o,m);else if(\"translate\"===e&&a&&void 0===m)r=r.translate(a,o||0,0);else if(\"rotate3d\"===e&&l.every((t=>!Number.isNaN(+t)))&&c)r=r.rotateAxisAngle(a,o,m,c);else if(\"rotate\"===e&&a&&[o,m].every((t=>void 0===t)))r=r.rotate(0,0,a);else if(\"scale3d\"===e&&u.every((t=>!Number.isNaN(+t)))&&u.some((t=>1!==t)))r=r.scale(a,o,m);else if(\"scale\"!==e||Number.isNaN(a)||1===a||void 0!==m)if(\"skew\"===e&&(a||!Number.isNaN(a)&&o)&&void 0===m)r=r.skew(a,o||0);else{if(!(/[XYZ]/.test(e)&&a&&[o,m].every((t=>void 0===t))&&[\"translate\",\"rotate\",\"scale\",\"skew\"].some((t=>e.includes(t)))))throw TypeError(n);if([\"skewX\",\"skewY\"].includes(e))r=r[e](a);else{const t=e.replace(/[XYZ]/,\"\"),n=e.replace(t,\"\"),s=[\"X\",\"Y\",\"Z\"].indexOf(n),i=\"scale\"===t?1:0,o=[0===s?a:i,1===s?a:i,2===s?a:i];r=r[t](...o)}}else{const t=Number.isNaN(+o)?a:o;r=r.scale(a,t,1)}})),r}function G(t,e){return e?[t.a,t.b,t.c,t.d,t.e,t.f]:[t.m11,t.m12,t.m13,t.m14,t.m21,t.m22,t.m23,t.m24,t.m31,t.m32,t.m33,t.m34,t.m41,t.m42,t.m43,t.m44]}function U(t,e,r){const n=new st;return n.m41=t,n.e=t,n.m42=e,n.f=e,n.m43=r,n}function K(t,e,r){const n=new st,s=Math.PI/180,i=t*s,a=e*s,o=r*s,m=Math.cos(i),c=-Math.sin(i),u=Math.cos(a),l=-Math.sin(a),h=Math.cos(o),f=-Math.sin(o),y=u*h,x=-u*f;n.m11=y,n.a=y,n.m12=x,n.b=x,n.m13=l;const p=c*l*h+m*f;n.m21=p,n.c=p;const g=m*h-c*l*f;return n.m22=g,n.d=g,n.m23=-c*u,n.m31=c*f-m*l*h,n.m32=c*h+m*l*f,n.m33=m*u,n}function W(t,e,r,n){const s=new st,i=Math.sqrt(t*t+e*e+r*r);if(0===i)return s;const a=t/i,o=e/i,m=r/i,c=n*(Math.PI/360),u=Math.sin(c),l=Math.cos(c),h=u*u,f=a*a,y=o*o,x=m*m,p=1-2*(y+x)*h;s.m11=p,s.a=p;const g=2*(a*o*h+m*u*l);s.m12=g,s.b=g,s.m13=2*(a*m*h-o*u*l);const d=2*(o*a*h-m*u*l);s.m21=d,s.c=d;const b=1-2*(x+f)*h;return s.m22=b,s.d=b,s.m23=2*(o*m*h+a*u*l),s.m31=2*(m*a*h+o*u*l),s.m32=2*(m*o*h-a*u*l),s.m33=1-2*(f+y)*h,s}function _(t,e,r){const n=new st;return n.m11=t,n.a=t,n.m22=e,n.d=e,n.m33=r,n}function tt(t,e){const r=new st;if(t){const e=t*Math.PI/180,n=Math.tan(e);r.m21=n,r.c=n}if(e){const t=e*Math.PI/180,n=Math.tan(t);r.m12=n,r.b=n}return r}function et(t){return tt(t,0)}function rt(t){return tt(0,t)}function nt(t,e){return Y([e.m11*t.m11+e.m12*t.m21+e.m13*t.m31+e.m14*t.m41,e.m11*t.m12+e.m12*t.m22+e.m13*t.m32+e.m14*t.m42,e.m11*t.m13+e.m12*t.m23+e.m13*t.m33+e.m14*t.m43,e.m11*t.m14+e.m12*t.m24+e.m13*t.m34+e.m14*t.m44,e.m21*t.m11+e.m22*t.m21+e.m23*t.m31+e.m24*t.m41,e.m21*t.m12+e.m22*t.m22+e.m23*t.m32+e.m24*t.m42,e.m21*t.m13+e.m22*t.m23+e.m23*t.m33+e.m24*t.m43,e.m21*t.m14+e.m22*t.m24+e.m23*t.m34+e.m24*t.m44,e.m31*t.m11+e.m32*t.m21+e.m33*t.m31+e.m34*t.m41,e.m31*t.m12+e.m32*t.m22+e.m33*t.m32+e.m34*t.m42,e.m31*t.m13+e.m32*t.m23+e.m33*t.m33+e.m34*t.m43,e.m31*t.m14+e.m32*t.m24+e.m33*t.m34+e.m34*t.m44,e.m41*t.m11+e.m42*t.m21+e.m43*t.m31+e.m44*t.m41,e.m41*t.m12+e.m42*t.m22+e.m43*t.m32+e.m44*t.m42,e.m41*t.m13+e.m42*t.m23+e.m43*t.m33+e.m44*t.m43,e.m41*t.m14+e.m42*t.m24+e.m43*t.m34+e.m44*t.m44])}class st{constructor(...t){const e=this;if(e.a=1,e.b=0,e.c=0,e.d=1,e.e=0,e.f=0,e.m11=1,e.m12=0,e.m13=0,e.m14=0,e.m21=0,e.m22=1,e.m23=0,e.m24=0,e.m31=0,e.m32=0,e.m33=1,e.m34=0,e.m41=0,e.m42=0,e.m43=0,e.m44=1,t.length){const r=[16,6].some((e=>e===t.length))?t:t[0];return e.setMatrixValue(r)}return e}get isIdentity(){const t=this;return 1===t.m11&&0===t.m12&&0===t.m13&&0===t.m14&&0===t.m21&&1===t.m22&&0===t.m23&&0===t.m24&&0===t.m31&&0===t.m32&&1===t.m33&&0===t.m34&&0===t.m41&&0===t.m42&&0===t.m43&&1===t.m44}get is2D(){const t=this;return 0===t.m31&&0===t.m32&&1===t.m33&&0===t.m34&&0===t.m43&&1===t.m44}setMatrixValue(t){return\"string\"==typeof t&&t.length&&\"none\"!==t?J(t):[Array,Float64Array,Float32Array].some((e=>t instanceof e))?Y(t):[st,DOMMatrix,Object].some((e=>t instanceof e))?B(t):this}toFloat32Array(t){return Float32Array.from(G(this,t))}toFloat64Array(t){return Float64Array.from(G(this,t))}toString(){const{is2D:t}=this;return`${t?\"matrix\":\"matrix3d\"}(${this.toFloat64Array(t).join(\", \")})`}toJSON(){const{is2D:t,isIdentity:e}=this;return{...this,is2D:t,isIdentity:e}}multiply(t){return nt(this,t)}translate(t,e,r){let n=e,s=r;return void 0===n&&(n=0),void 0===s&&(s=0),nt(this,U(t,n,s))}scale(t,e,r){let n=e,s=r;return void 0===n&&(n=t),void 0===s&&(s=1),nt(this,_(t,n,s))}rotate(t,e,r){let n=t,s=e||0,i=r||0;return\"number\"==typeof t&&void 0===e&&void 0===r&&(i=n,n=0,s=0),nt(this,K(n,s,i))}rotateAxisAngle(t,e,r,n){if([t,e,r,n].some((t=>Number.isNaN(+t))))throw new TypeError(\"CSSMatrix: expecting 4 values\");return nt(this,W(t,e,r,n))}skewX(t){return nt(this,et(t))}skewY(t){return nt(this,rt(t))}skew(t,e){return nt(this,tt(t,e))}transformPoint(t){const e=this,r=e.m11*t.x+e.m21*t.y+e.m31*t.z+e.m41*t.w,n=e.m12*t.x+e.m22*t.y+e.m32*t.z+e.m42*t.w,s=e.m13*t.x+e.m23*t.y+e.m33*t.z+e.m43*t.w,i=e.m14*t.x+e.m24*t.y+e.m34*t.z+e.m44*t.w;return t instanceof DOMPoint?new DOMPoint(r,n,s,i):{x:r,y:n,z:s,w:i}}}Object.assign(st,{Translate:U,Rotate:K,RotateAxisAngle:W,Scale:_,SkewX:et,SkewY:rt,Skew:tt,Multiply:nt,fromArray:Y,fromMatrix:B,fromString:J,toArray:G});function it(t,e,r){const[n,s,i]=r,[a,o,m]=\n/**\n * Transforms a specified point using a matrix, returning a new\n * Tuple *Object* comprising of the transformed point.\n * Neither the matrix nor the original point are altered.\n *\n * @copyright thednp © 2021\n *\n * @param {SVGPath.CSSMatrix} M CSSMatrix instance\n * @param {[number, number, number, number]} v Tuple\n * @return {[number, number, number, number]} the resulting Tuple\n */\nfunction(t,e){let r=U(...e);return[,,,r.m44]=e,r=t.multiply(r),[r.m41,r.m42,r.m43,r.m44]}(t,[...e,0,1]),c=o-s,u=m-i;return[(a-n)*(Math.abs(i)/Math.abs(u)||1)+n,c*(Math.abs(i)/Math.abs(u)||1)+s]}function at(t,e){let r,n,s,i,o,m,c=0,u=0;const l=v(t),h=e&&Object.keys(e);if(!e||!h.length)return g(l);const f=$(l);if(!e.origin){const{origin:t}=a;Object.assign(e,{origin:t})}const y=function(t){let e=new st;const{origin:r}=t,[n,s]=r,{translate:i}=t,{rotate:a}=t,{skew:o}=t,{scale:m}=t;return Array.isArray(i)&&i.every((t=>!Number.isNaN(+t)))&&i.some((t=>0!==t))?e=e.translate(...i):\"number\"!=typeof i||Number.isNaN(i)||(e=e.translate(i)),(a||o||m)&&(e=e.translate(n,s),Array.isArray(a)&&a.every((t=>!Number.isNaN(+t)))&&a.some((t=>0!==t))?e=e.rotate(...a):\"number\"!=typeof a||Number.isNaN(a)||(e=e.rotate(a)),Array.isArray(o)&&o.every((t=>!Number.isNaN(+t)))&&o.some((t=>0!==t))?(e=o[0]?e.skewX(o[0]):e,e=o[1]?e.skewY(o[1]):e):\"number\"!=typeof o||Number.isNaN(o)||(e=e.skewX(o)),Array.isArray(m)&&m.every((t=>!Number.isNaN(+t)))&&m.some((t=>1!==t))?e=e.scale(...m):\"number\"!=typeof m||Number.isNaN(m)||(e=e.scale(m)),e=e.translate(-n,-s)),e}(e),{origin:x}=e,p={...T};let d=[],b=0,M=\"\",w=[];const A=[];if(!y.isIdentity){for(r=0,s=l.length;r<s;r+=1){d=l[r],l[r]&&([M]=d),A[r]=M,\"A\"===M&&(d=z(f[r],p),l[r]=z(f[r],p),C(l,A,r),f[r]=z(f[r],p),C(f,A,r),s=Math.max(l.length,f.length)),d=f[r],b=d.length,p.x1=+d[b-2],p.y1=+d[b-1],p.x2=+d[b-4]||p.x1,p.y2=+d[b-3]||p.y1;const t={s:l[r],c:l[r][0],x:p.x1,y:p.y1};w=[...w,t]}return w.map((t=>{switch(M=t.c,d=t.s,M){case\"L\":case\"H\":case\"V\":return[o,m]=it(y,[t.x,t.y],x),c!==o&&u!==m?d=[\"L\",o,m]:u===m?d=[\"H\",o]:c===o&&(d=[\"V\",m]),c=o,u=m,d;default:for(n=1,i=d.length;n<i;n+=2)[c,u]=it(y,[+d[n],+d[n+1]],x),d[n]=c,d[n+1]=u;return d}}))}return g(l)}function ot(t,e){const{x:r,y:n}=t,{x:s,y:i}=e,a=r*s+n*i,o=Math.sqrt((r**2+n**2)*(s**2+i**2));return(r*i-n*s<0?-1:1)*Math.acos(a/o)}function mt(t,e,r,n,s,i,a,o,m,c){const{abs:u,sin:l,cos:h,sqrt:f,PI:y}=Math;let x=u(r),p=u(n);const g=(s%360+360)%360*(y/180);if(t===o&&e===m)return{x:t,y:e};if(0===x||0===p)return L(t,e,o,m,c).point;const d=(t-o)/2,b=(e-m)/2,M=h(g)*d+l(g)*b,w=-l(g)*d+h(g)*b,v=M**2/x**2+w**2/p**2;v>1&&(x*=f(v),p*=f(v));let A=(x**2*p**2-x**2*w**2-p**2*M**2)/(x**2*w**2+p**2*M**2);A=A<0?0:A;const N=(i!==a?1:-1)*f(A),C=N*(x*w/p),P=N*(-p*M/x),S=h(g)*C-l(g)*P+(t+o)/2,k=l(g)*C+h(g)*P+(e+m)/2,T={x:(M-C)/x,y:(w-P)/p},$=ot({x:1,y:0},T);let E=ot(T,{x:(-M-C)/x,y:(-w-P)/p});!a&&E>0?E-=2*y:a&&E<0&&(E+=2*y),E%=2*y;const q=$+E*c,O=x*h(q),V=p*l(q);return{x:h(g)*O-l(g)*V+S,y:l(g)*O+h(g)*V+k}}function ct(t,e,r,n,s,i,a,o,m,c){const u=\"number\"==typeof c;let l=t,h=e,f=0,y=[l,h,f],x=[l,h],p=0,g={x:0,y:0},d=[{x:l,y:h}];u&&c<=0&&(g={x:l,y:h});for(let b=0;b<=300;b+=1){if(p=b/300,({x:l,y:h}=mt(t,e,r,n,s,i,a,o,m,p)),d=[...d,{x:l,y:h}],f+=j(x,[l,h]),x=[l,h],u&&f>c&&c>y[2]){const t=(f-c)/(f-y[2]);g={x:x[0]*(1-t)+y[0]*t,y:x[1]*(1-t)+y[1]*t}}y=[l,h,f]}return u&&c>=f&&(g={x:o,y:m}),{length:f,point:g,min:{x:Math.min(...d.map((t=>t.x))),y:Math.min(...d.map((t=>t.y)))},max:{x:Math.max(...d.map((t=>t.x))),y:Math.max(...d.map((t=>t.y)))}}}function ut(t,e,r,n,s,i,a,o,m){const c=1-m;return{x:c**3*t+3*c**2*m*r+3*c*m**2*s+m**3*a,y:c**3*e+3*c**2*m*n+3*c*m**2*i+m**3*o}}function lt(t,e,r,n,s,i,a,o,m){const c=\"number\"==typeof m;let u=t,l=e,h=0,f=[u,l,h],y=[u,l],x=0,p={x:0,y:0},g=[{x:u,y:l}];c&&m<=0&&(p={x:u,y:l});for(let d=0;d<=300;d+=1){if(x=d/300,({x:u,y:l}=ut(t,e,r,n,s,i,a,o,x)),g=[...g,{x:u,y:l}],h+=j(y,[u,l]),y=[u,l],c&&h>m&&m>f[2]){const t=(h-m)/(h-f[2]);p={x:y[0]*(1-t)+f[0]*t,y:y[1]*(1-t)+f[1]*t}}f=[u,l,h]}return c&&m>=h&&(p={x:a,y:o}),{length:h,point:p,min:{x:Math.min(...g.map((t=>t.x))),y:Math.min(...g.map((t=>t.y)))},max:{x:Math.max(...g.map((t=>t.x))),y:Math.max(...g.map((t=>t.y)))}}}function ht(t,e,r,n,s,i,a){const o=1-a;return{x:o**2*t+2*o*a*r+a**2*s,y:o**2*e+2*o*a*n+a**2*i}}function ft(t,e,r,n,s,i,a){const o=\"number\"==typeof a;let m=t,c=e,u=0,l=[m,c,u],h=[m,c],f=0,y={x:0,y:0},x=[{x:m,y:c}];o&&a<=0&&(y={x:m,y:c});for(let p=0;p<=300;p+=1){if(f=p/300,({x:m,y:c}=ht(t,e,r,n,s,i,f)),x=[...x,{x:m,y:c}],u+=j(h,[m,c]),h=[m,c],o&&u>a&&a>l[2]){const t=(u-a)/(u-l[2]);y={x:h[0]*(1-t)+l[0]*t,y:h[1]*(1-t)+l[1]*t}}l=[m,c,u]}return o&&a>=u&&(y={x:s,y:i}),{length:u,point:y,min:{x:Math.min(...x.map((t=>t.x))),y:Math.min(...x.map((t=>t.y)))},max:{x:Math.max(...x.map((t=>t.x))),y:Math.max(...x.map((t=>t.y)))}}}function yt(t,e){const r=$(t),n=\"number\"==typeof e;let s,i,a,o=[],m=0,c=0,u=0,l=0,h=[],f=[],y=0,x={x:0,y:0},p=x,g=x,d=x,b=0;for(let t=0,M=r.length;t<M;t+=1)a=r[t],[i]=a,s=\"M\"===i,o=s?o:[m,c,...a.slice(1)],s?([,u,l]=a,x={x:u,y:l},p=x,y=0,n&&e<.001&&(d=x)):\"L\"===i?({length:y,min:x,max:p,point:g}=L(...o,(e||0)-b)):\"A\"===i?({length:y,min:x,max:p,point:g}=ct(...o,(e||0)-b)):\"C\"===i?({length:y,min:x,max:p,point:g}=lt(...o,(e||0)-b)):\"Q\"===i?({length:y,min:x,max:p,point:g}=ft(...o,(e||0)-b)):\"Z\"===i&&(o=[m,c,u,l],({length:y,min:x,max:p,point:g}=L(...o,(e||0)-b))),n&&b<e&&b+y>=e&&(d=g),f=[...f,p],h=[...h,x],b+=y,[m,c]=\"Z\"!==i?a.slice(-2):[u,l];return n&&e>=b&&(d={x:m,y:c}),{length:b,point:d,min:{x:Math.min(...h.map((t=>t.x))),y:Math.min(...h.map((t=>t.y)))},max:{x:Math.max(...f.map((t=>t.x))),y:Math.max(...f.map((t=>t.y)))}}}function xt(t){if(!t)return{x:0,y:0,width:0,height:0,x2:0,y2:0,cx:0,cy:0,cz:0};const{min:{x:e,y:r},max:{x:n,y:s}}=yt(t),i=n-e,a=s-r;return{width:i,height:a,x:e,y:r,x2:n,y2:s,cx:e+i/2,cy:r+a/2,cz:Math.max(i,a)+Math.min(i,a)/2}}function pt(t){return yt(t).length}function gt(t,e){return yt(t,e).point}Object.assign(st,{Version:\"1.0.3\"});class dt{constructor(t,e){const r=e||{},n=void 0===t;if(n||!t.length)throw TypeError(`${c}: \"pathValue\" is ${n?\"undefined\":\"empty\"}`);const s=M(t);if(\"string\"==typeof s)throw TypeError(s);this.segments=s;const{width:i,height:o,cx:m,cy:u,cz:l}=this.getBBox(),{round:h,origin:f}=r;let y,x;if(\"auto\"===h){const t=`${Math.floor(Math.max(i,o))}`.length;y=t>=4?0:4-t}else Number.isInteger(h)||\"off\"===h?y=h:({round:y}=a);if(Array.isArray(f)&&f.length>=2){const[t,e,r]=f.map(Number);x=[Number.isNaN(t)?m:t,Number.isNaN(e)?u:e,Number.isNaN(r)?l:r]}else x=[m,u,l];return this.round=y,this.origin=x,this}getBBox(){return xt(this.segments)}getTotalLength(){return pt(this.segments)}getPointAtLength(t){return gt(this.segments,t)}toAbsolute(){const{segments:t}=this;return this.segments=v(t),this}toRelative(){const{segments:t}=this;return this.segments=N(t),this}toCurve(){const{segments:t}=this;return this.segments=Z(t),this}reverse(t){this.toAbsolute();const{segments:e}=this,r=H(e),n=r.length>1?r:0,s=n&&g(n).map(((e,r)=>t?r?F(e):M(e):F(e)));let i=[];return i=n?s.flat(1):t?e:F(e),this.segments=g(i),this}normalize(){const{segments:t}=this;return this.segments=$(t),this}optimize(){const{segments:t}=this;return this.segments=X(t,this.round),this}transform(t){if(!t||\"object\"!=typeof t||\"object\"==typeof t&&![\"translate\",\"rotate\",\"skew\",\"scale\"].some((e=>e in t)))return this;const e={};Object.keys(t).forEach((r=>{e[r]=Array.isArray(t[r])?[...t[r]]:Number(t[r])}));const{segments:r}=this,[n,s,i]=this.origin,{origin:a}=e;if(Array.isArray(a)&&a.length>=2){const[t,r,o]=a.map(Number);e.origin=[Number.isNaN(t)?n:t,Number.isNaN(r)?s:r,o||i]}else e.origin=[n,s,i];return this.segments=at(r,e),this}flipX(){return this.transform({rotate:[0,180,0]}),this}flipY(){return this.transform({rotate:[180,0,0]}),this}toString(){return R(this.segments,this.round)}}function bt(t){let e=0,r=0,n=0;return Z(t).map((t=>\"M\"===t[0]?([,e,r]=t,0):(n=function(t,e,r,n,s,i,a,o){return 3*((o-e)*(r+s)-(a-t)*(n+i)+n*(t-s)-r*(e-i)+o*(s+t/3)-a*(i+e/3))/20}(e,r,...t.slice(1)),[e,r]=t.slice(-2),n))).reduce(((t,e)=>t+e),0)}function Mt(t,e){const r=M(t);if(\"string\"==typeof r)throw TypeError(r);let n=[...r],s=pt(n),i=n.length-1,a=0,o=0,m=r[0];const[c,u]=m.slice(-2),l={x:c,y:u};if(i<=0||!e||!Number.isFinite(e))return{segment:m,index:0,length:o,point:l,lengthAtSegment:a};if(e>=s)return n=r.slice(0,-1),a=pt(n),o=s-a,{segment:r[i],index:i,length:o,lengthAtSegment:a};const h=[];for(;i>0;)m=n[i],n=n.slice(0,-1),a=pt(n),o=s-a,s=a,h.push({segment:m,index:i,length:o,lengthAtSegment:a}),i-=1;return h.find((({lengthAtSegment:t})=>t<=e))}function wt(t,e){const r=M(t),n=$(r),s=pt(r),i=t=>{const r=t.x-e.x,n=t.y-e.y;return r*r+n*n};let a,o,m,c,u=8,l=0,h=0,f=1/0;for(let t=0;t<=s;t+=u)a=gt(n,t),l=i(a),l<f&&(o=a,h=t,f=l);u/=2;let y=0,x=0,p=0,g=0;for(;u>.5;)y=h-u,m=gt(n,y),p=i(m),x=h+u,c=gt(n,x),g=i(c),y>=0&&p<f?(o=m,h=y,f=p):x<=s&&g<f?(o=c,h=x,f=g):u/=2;const d=Mt(r,h);return{closest:o,distance:Math.sqrt(f),segment:d}}function vt(t){if(\"string\"!=typeof t)return!1;const e=new d(t);for(y(e);e.index<e.max&&!e.err.length;)p(e);return!e.err.length&&\"mM\".includes(e.segments[0][0])}const At={line:[\"x1\",\"y1\",\"x2\",\"y2\"],circle:[\"cx\",\"cy\",\"r\"],ellipse:[\"cx\",\"cy\",\"rx\",\"ry\"],rect:[\"width\",\"height\",\"x\",\"y\",\"rx\",\"ry\"],polygon:[\"points\"],polyline:[\"points\"],glyph:[\"d\"]};const Nt={CSSMatrix:st,parsePathString:M,isPathArray:b,isCurveArray:S,isAbsoluteArray:w,isRelativeArray:A,isNormalizedArray:P,isValidPath:vt,pathToAbsolute:v,pathToRelative:N,pathToCurve:Z,pathToString:R,getDrawDirection:function(t){return bt(Z(t))>=0},getPathArea:bt,getPathBBox:xt,pathLengthFactory:yt,getTotalLength:pt,getPointAtLength:gt,getClosestPoint:function(t,e){return wt(t,e).closest},getSegmentOfPoint:function(t,e){return wt(t,e).segment},getPropertiesAtPoint:wt,getPropertiesAtLength:Mt,getSegmentAtLength:function(t,e){return Mt(t,e).segment},isPointInStroke:function(t,e){const{distance:r}=wt(t,e);return Math.abs(r)<.001},clonePath:g,splitPath:H,fixPath:function(t){const e=M(t),r=$(e),{length:n}=e,s=\"Z\"===r.slice(-1)[0][0],i=s?n-2:n-1,[a,o]=r[0].slice(1),[m,c]=r[i].slice(-2);return s&&a===m&&o===c?e.slice(0,-1):e},roundPath:Q,optimizePath:X,reverseCurve:function(t){const e=t.slice(1).map(((e,r,n)=>r?[...n[r-1].slice(-2),...e.slice(1)]:[...t[0].slice(1),...e.slice(1)])).map((t=>t.map(((e,r)=>t[t.length-r-2*(1-r%2)])))).reverse();return[[\"M\",...e[0].slice(0,2)],...e.map((t=>[\"C\",...t.slice(2)]))]},reversePath:F,normalizePath:$,transformPath:at,shapeToPath:function(t,e){const r=Object.keys(At),{tagName:n}=t;if(n&&!r.some((t=>n===t)))throw TypeError(`${c}: \"${n}\" is not SVGElement`);const s=document.createElementNS(\"http://www.w3.org/2000/svg\",\"path\"),i=n||t.type,o={};o.type=i;const m=At[i];let u;n?(m.forEach((e=>{o[e]=t.getAttribute(e)})),Object.values(t.attributes).forEach((({name:t,value:e})=>{m.includes(t)||s.setAttribute(t,e)}))):(Object.assign(o,t),Object.keys(o).forEach((t=>{m.includes(t)||\"type\"===t||s.setAttribute(t.replace(/[A-Z]/g,(t=>`-${t.toLowerCase()}`)),o[t])})));const{round:l}=a;return\"circle\"===i?u=R(function(t){const{cx:e,cy:r,r:n}=t;return[[\"M\",e-n,r],[\"a\",n,n,0,1,0,2*n,0],[\"a\",n,n,0,1,0,-2*n,0]]}(o),l):\"ellipse\"===i?u=R(function(t){const{cx:e,cy:r,rx:n,ry:s}=t;return[[\"M\",e-n,r],[\"a\",n,s,0,1,0,2*n,0],[\"a\",n,s,0,1,0,-2*n,0]]}(o),l):[\"polyline\",\"polygon\"].includes(i)?u=R(function(t){const e=[],r=(t.points||\"\").trim().split(/[\\s|,]/).map(Number);let n=0;for(;n<r.length;)e.push([n?\"L\":\"M\",r[n],r[n+1]]),n+=2;return\"polygon\"===t.type?[...e,[\"z\"]]:e}(o),l):\"rect\"===i?u=R(function(t){const e=+t.x||0,r=+t.y||0,n=+t.width,s=+t.height;let i=+t.rx,a=+t.ry;return i||a?(i=i||a,a=a||i,2*i>n&&(i-=(2*i-n)/2),2*a>s&&(a-=(2*a-s)/2),[[\"M\",e+i,r],[\"h\",n-2*i],[\"s\",i,0,i,a],[\"v\",s-2*a],[\"s\",0,a,-i,a],[\"h\",2*i-n],[\"s\",-i,0,-i,-a],[\"v\",2*a-s],[\"s\",0,-a,i,-a]]):[[\"M\",e,r],[\"h\",n],[\"v\",s],[\"H\",e],[\"Z\"]]}(o),l):\"line\"===i?u=R(function(t){const{x1:e,y1:r,x2:n,y2:s}=t;return[[\"M\",e,r],[\"L\",n,s]]}(o),l):\"glyph\"===i&&(u=n?t.getAttribute(\"d\"):t.d),!!vt(u)&&(s.setAttribute(\"d\",u),e&&n&&(t.before(s,t),t.remove()),s)},options:a};Object.assign(dt,Nt,{Version:\"1.0.5\"});const Ct=t=>null==t,Pt=a=>{const{width:o,height:m,cx:c,cy:u,rx:l,ry:h,startOffset:f,reversed:y,text:x,svgProps:p,ellipseProps:g,textPathProps:d,textProps:b,tspanProps:M}=a,[w,v]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(!1),[A]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(`ellipse-id${(0,react__WEBPACK_IMPORTED_MODULE_0__.useId)().replaceAll(\":\",\"-\")}`),N=(0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();if((0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)((()=>{if(N.current){const t={id:A,type:\"ellipse\",rx:l,ry:h,cx:c,cy:u,style:\"fill: none;\",...g},e=N.current,r=dt.shapeToPath(t,!0),n=document.getElementById(A);if(n&&n.remove(),e.prepend(r),y){const t=r.getAttribute(\"d\"),e=dt.reversePath(t),n=dt.pathToString(e);r.setAttribute(\"d\",n)}v(!0)}}),[N.current,y,o,m,p,c,u,l,h,g]),Ct(o))throw new Error(\"ReactCurvedText Error: width is required\");if(Ct(m))throw new Error(\"ReactCurvedText Error: height is required\");if(Ct(c))throw new Error(\"ReactCurvedText Error: cx is required\");if(Ct(u))throw new Error(\"ReactCurvedText Error: cy is required\");if(Ct(l))throw new Error(\"ReactCurvedText Error: rx is required\");if(Ct(h))throw new Error(\"ReactCurvedText Error: ry is required\");if(Ct(x))throw new Error(\"ReactCurvedText Error: text is required\");const C=JSON.stringify({width:o,height:m,cx:c,cy:u,rx:l,ry:h,startOffset:f,reversed:y,text:x,svgProps:p,ellipseProps:g,textPathProps:d,textProps:b,tspanProps:M,rendered:w});return react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"svg\",i({ref:N,height:m,width:o},p),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"text\",i({key:C},b),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"textPath\",i({xlinkHref:`#${A}`,startOffset:f},d),react__WEBPACK_IMPORTED_MODULE_0___default().createElement(\"tspan\",M,x))))};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-curved-text/dist/index.es.js\n");

/***/ })

};
;